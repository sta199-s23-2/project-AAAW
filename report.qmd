---
title: "Project title"
subtitle: "Report"
format: html
editor: visual
execute:
  echo: true
---

```{r}
#| label: load-pkgs
#| message: false

library(tidyverse)
library(tidymodels)
```

```{r}
#| label: load-play-off-data

AAAW_playoff_stats <- read_csv("data/AAAW_updatedplayoffStats.csv")
glimpse(AAAW_playoff_stats)
```

```{r}
#| label: get-above-1990

NBA_df <- AAAW_playoff_stats |>
  filter(season >= 1990)

```

```{r}
#| label: create-unique-teams

NBA_df <- NBA_df |>
  mutate(team_id = paste(season, team_id, sep = ""))

head(NBA_df)

```

```{r}
#| label: filter-noises

NBA_df <- NBA_df |>
  filter(g >= 4,
         mp_per_g >= 10)
  
```

Part 1: Basic stats

```{r}
#| label: data-wrangling-for-basic-stats

NBA_df_basic <- NBA_df |>
  mutate(pp_36 = pts_per_g / mp_per_g * 36,
         rp_36 = trb_per_g / mp_per_g * 36,
         ap_36 = ast_per_g / mp_per_g * 36)
```

```{r}
#| label: dist_basic_stats

NBA_df_basic |>
  ggplot(aes(x = pp_36)) +
  geom_histogram(binwidth = 1)

NBA_df_basic |>
  ggplot(aes(x = rp_36)) +
  geom_histogram(binwidth = 0.5)

NBA_df_basic |>
  ggplot(aes(x = ap_36)) +
  geom_histogram(binwidth = 0.2)

```

```{r}
#| label:  create-team-based

Qual_player_df_basic <- NBA_df_basic |>
  filter(pp_36 > 16 | rp_36 > 6.5 | ap_36 > 3.5) |>
  group_by(team_id) |>
  summarise(count_qual = n())


All_rot_players_df <- NBA_df |>
  group_by(team_id) |>
  summarise(count_rot = n())

Basic_df <- Qual_player_df_basic |>
  left_join(All_rot_players_df, by = "team_id")

Basic_df
```

```{r}
#| label: champ-label
Basic_df <- Basic_df |>
  mutate(Basic_depth = count_qual / count_rot,
         Championship = if_else(team_id %in% c("1990DET", "1991CHI", "1992CHI", "1993CHI", "1994HOU", "1995HOU", "1996CHI", "1997CHI", "1998CHI", "1999SAS", "2000LAL", "2001LAL", "2002LAL", "2003SAS", "2004DET", "2005SAS", "2006MIA", "2007SAS", "2008BOS", "2009LAL", "2010LAL", "2011DAL", "2012MIA", "2013MIA", "2014SAS", "2015GSW", "2016CLE", "2017GSW", "2018GSW", "2019TOR", "2020LAL", "2021MIL", "2022GSW"), "Champ", "Not Champ" ))
```

```{r}
#| label: basic-barplot-depth
Basic_df |>
  ggplot(
    aes(x = Championship, y = Basic_depth,  fill = Championship)
  ) +
  geom_boxplot() +
  theme(legend.position = "none") +
  labs(title = "Basic Depth of Champions vs Non-Champions",
       x = "Team",
       y = "Team Depth (Defined by Basic Stats)")

```

```{r}
#| label: basic-violin-depth

Basic_df |>
  ggplot(
    aes(x = Championship, y = Basic_depth,  fill = Championship)
  ) +
  geom_violin() +
  theme(legend.position = "none") +
  labs(title = "Basic Depth of Champions vs Non-Champions",
       x = "Team",
       y = "Team Depth (Defined by Basic Stats)")
```

Statistical Test

```{r}
#| label: basic-summarystat-depth

Basic_df |>
  group_by(Championship) |>
  summarize(mean(Basic_depth))
```

$\bar{x_c} - \bar{x_n}$ = 0.04

```{r}
#| label: bootstrap-basic

null_dist_basic <- Basic_df |>
  specify(response = Basic_depth, explanatory = Championship) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("Champ", "Not Champ"))

```

```{r}
#| label: null-vis-basic
visualize(null_dist_basic) +
 shade_p_value(obs_stat = 0.04, direction = "greater") +
  labs(title = "Null Distribution of (Champion Depth - Non-Champion Depth) 
using Basic Statistics",
      x = "Difference (Champion Depth - Non-Champion Depth)",
      y = "Frequency")

```

```{r}
#| label: p-basic
null_dist_basic |>
  get_p_value(obs_stat = 0.04, direction = "right")
```

Part 2: Advanced Stats

```{r}
#| label: group-by-team-advanced

Qual_player_df_adv <- NBA_df |>
  filter(per >= 15 | ws_per_48 >= 0.1) |>
  group_by(team_id) |>
  summarise(count_qual = n())

Adv_df <- Qual_player_df_adv |>
  left_join(All_rot_players_df, by = "team_id")
```

```{r}
#| label: champ-label-advanced
Adv_df <- Adv_df |>
  mutate(Adv_depth = count_qual / count_rot,
         Championship = if_else(team_id %in% c("1990DET", "1991CHI", "1992CHI", "1993CHI", "1994HOU", "1995HOU", "1996CHI", "1997CHI", "1998CHI", "1999SAS", "2000LAL", "2001LAL", "2002LAL", "2003SAS", "2004DET", "2005SAS", "2006MIA", "2007SAS", "2008BOS", "2009LAL", "2010LAL", "2011DAL", "2012MIA", "2013MIA", "2014SAS", "2015GSW", "2016CLE", "2017GSW", "2018GSW", "2019TOR", "2020LAL", "2021MIL", "2022GSW"), "Champ", "Not Champ" ))
```

```{r}
#| label: adv-barplot-depth

Adv_df |>
  ggplot(
    aes(x = Championship, y = Adv_depth,  fill = Championship)
  ) +
  geom_boxplot() +
  theme(legend.position = "none") +
  labs(title = "Advanved Depth of Champions vs Non-Champions",
       x = "Team",
       y = "Team Depth (Defined by Adv Stats)")
```

```{r}
#| label: adv-violinplot-depth

Adv_df |>
  ggplot(
    aes(x = Championship, y = Adv_depth,  fill = Championship)
  ) +
  geom_violin() +
  theme(legend.position = "none") +
  labs(title = "Advanved Depth of Champions vs Non-Champions",
       x = "Team",
       y = "Team Depth (Defined by Adv Stats)")
```

```{r}
#| label: adv-summarystat-depth

Adv_df |>
  group_by(Championship) |>
  summarize(mean(Adv_depth))
```

$\bar{x_c} - \bar{x_n}$ = 0.25

```{r}
#| label: bootstrap-adv

null_dist_adv <- Adv_df |>
  specify(response = Adv_depth, explanatory = Championship) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("Champ", "Not Champ"))
```

```{r}
#| label: null-vis-adv
visualize(null_dist_adv) +
 shade_p_value(obs_stat = 0.25, direction = "greater") +
  labs(title = "Advanced Distribution of (Champion Depth - Non-Champion Depth) 
using Basic Statistics",
      x = "Difference (Champion Depth - Non-Champion Depth)",
      y = "Frequency")

```

```{r}
#| label: p-adv
null_dist_adv |>
  get_p_value(obs_stat = 0.25, direction = "right")
```

Part 3: Combo

```{r}
#| label: group-by-team-combo

NBA_df_combo <- NBA_df |>
  mutate(pp_36 = pts_per_g / mp_per_g * 36,
         rp_36 = trb_per_g / mp_per_g * 36,
         ap_36 = ast_per_g / mp_per_g * 36)

Qual_player_df_combo <- NBA_df_combo |>
  filter(pp_36 > 16 | rp_36 > 6.5 | ap_36 > 3.5, 
         per >= 15 | ws_per_48 >= 0.1) |>
  group_by(team_id) |>
  summarise(count_qual = n())

Combo_df <- Qual_player_df_combo |>
  left_join(All_rot_players_df, by = "team_id")
```

```{r}
#| label: champ-label-combo
Combo_df <- Combo_df |>
  mutate(Combo_depth = count_qual / count_rot,
         Championship = if_else(team_id %in% c("1990DET", "1991CHI", "1992CHI", "1993CHI", "1994HOU", "1995HOU", "1996CHI", "1997CHI", "1998CHI", "1999SAS", "2000LAL", "2001LAL", "2002LAL", "2003SAS", "2004DET", "2005SAS", "2006MIA", "2007SAS", "2008BOS", "2009LAL", "2010LAL", "2011DAL", "2012MIA", "2013MIA", "2014SAS", "2015GSW", "2016CLE", "2017GSW", "2018GSW", "2019TOR", "2020LAL", "2021MIL", "2022GSW"), "Champ", "Not Champ" ))
```

```{r}
#| label: combo-barplot-depth

Combo_df |>
  ggplot(
    aes(x = Championship, y = Combo_depth,  fill = Championship)
  ) +
  geom_boxplot() +
  theme(legend.position = "none") +
  labs(title = "Combo Depth of Champions vs Non-Champions",
       x = "Team",
       y = "Team Depth (Defined by Combo Stats)")
```

```{r}
#| label: combo-violin-depth

Combo_df |>
  ggplot(
    aes(x = Championship, y = Combo_depth,  fill = Championship)
  ) +
  geom_violin() +
  theme(legend.position = "none") +
  labs(title = "Combo Depth of Champions vs Non-Champions",
       x = "Team",
       y = "Team Depth (Defined by Combo Stats)")
```

```{r}
#| label: combo-summarystat-depth

Combo_df |>
  group_by(Championship) |>
  summarize(mean(Combo_depth))
```

$\bar{x_c} - \bar{x_n}$ = 0.19

```{r}
#| label: bootstrap-combo

null_dist_combo <- Combo_df |>
  specify(response = Combo_depth, explanatory = Championship) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means", order = c("Champ", "Not Champ"))
```

```{r}
#| label: null-vis-combo
visualize(null_dist_combo) +
 shade_p_value(obs_stat = 0.19, direction = "greater") +
  labs(title = "Combo Distribution of (Champion Depth - Non-Champion Depth) 
using Basic Statistics",
      x = "Difference (Champion Depth - Non-Champion Depth)",
      y = "Frequency")
```

```{r}
#| label: p-combo
null_dist_combo |>
  get_p_value(obs_stat = 0.19, direction = "right")
```

Model Fitting

```{r}
#| label: model-adv-stat

Adv_df <- Adv_df |>
  mutate (Championship = as.factor(Championship))

Champ_model <- logistic_reg() |>
  set_engine('glm') |>
  fit(Championship ~ Adv_depth, data = Adv_df, family = 'binomial') 
```

```{r}
#| label: model-equation

Champ_model |>
  tidy()
```

```{r}
#| label: model-vis
Adv_df <- Adv_df |>
  mutate(pred_prob = predict(Champ_model$fit, type = "response"))

ggplot(data = Adv_df) + 
  geom_point(aes(x = Adv_depth, y = as.numeric(Championship) -1, 
                        color = Championship)) + 
  geom_line(aes(x = Adv_depth, y = pred_prob)) + 
  labs(title = "Logistic Model of Adv_depth on Championship",
       x = "Team Depth from Advanced Statistics", 
       y = "Probability of Team Winning Championship", 
       color = "Champion or Not"
       )
```

[
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Project title",
    "section": "",
    "text": "Introduction:\nThe National Basketball Association (NBA) is the most popular premiere basketball league in the world. It produces data from every one of the 400-500 players in the league every season, leading to several million datapoints across NBA history. Every year, many models are developed to evaluate team strength and predict the success of the team.\nTeam depth is the overall quality of players in a sports team, especially those besides the team’s star players. A team with good depth has competent players on both their starting lineup and their bench, which allows the team to withstand injuries and to have more flexibility for strategic adjustments. However, despite the importance of team depth, there is no established metric to measure it in the NBA. Quantitative analysis of the connection between team depth and team success is still missing. It is an often overlooked variable that significantly contributes to the over-all strength of the team. Performing an analysis on this question allow us to develop a systematic method to better understand and assess this often-neglected factor.\nIn this study, we investigate if the championship winning teams have a greater depth than the rest of the field using NBA play-off data from 1990-2022 collected by Robert Sunderhaft, who webscraped it from Basketball Reference, a public database of NBA statistics collated by Sports Reference LLC. In the dataset, we use 3 different methods to quantify team depth: (1) Basic statistics approach, (2) Advanced statistics, (3) Combo of Basic and Advanced statistics. We hypothesize that with all 3 measurements, the depths of championship winning teams would be significantly higher than those of the other teams because team depth has a positive effect on the team’s performance. If this hypothesis holds true and the team depth does have an effect on championship, we will identify the quantification of team depth that resulted in the smallest p value (greatest significant difference). We will then fit this team depth metric to a logistic model to predict whether the team wins the championship, showing the real-life application of our statistical finding.\nData background\nThis research aims to develop a systematic way to evaluate team depth using the NBA play-off data from 1950-2022. We will then investigate its effect on the final results of the championship. To evaluate team depth, we will look at variables such as the points by bench players, numbers of bench players, field goal percentage of role players. We will also ask questions such as are the player minutes evenly-spreaded, and are all the positions well-subsituted, to evaluate the depth of the team. Eventually, we will assign relative scores for team depth and evaluate its association with final championship results.\nThe only ethical issue that arises with this use of this data set is that “basketball skill” is not a guaranteed, easily predictable variable and can change with each game. For example, a player can have an off day and thus have a dip in stats. That is why there is a high probability that any quality of play predictions made based off of these statistics is largely speculatory and could vary for any given game.\nAnother issue that arises is that some data, like percentages, blocks, turnovers, and other advanced statistics, weren’t collected for players early in this dataset, so there are null values instead.\nIn regards to this specific data set and the questions that we are addressing, the null hypothesis states that the true squad depth for champions minus the true squad depth for non-champions will equal zero, meaning that there is no statistical difference between the two measured teams. Our alternate hypothesis is that the true squad depth for champions minus the true squad depth for non-champions will be greater than zero, signifying a significant statistical relationship. This means that we can reject the null hypothesis if we were to get a p-value less than .05 and we cannot fail to reject it if it is greater than .05.\nLiterature Review: Published credible article: “Predicting the Outcome of NBA Playoffs Based on the Maximum Entropy Principle” (Cheng et al.) https://www.mdpi.com/1099-4300/18/12/450\nSummary\nCheng et al. developed a machine learning model that utilized maximum entropy principle to predict the outcome of nba play-off results using 14 basic technical features, such as 3 points, field goals, and number of steals. Their model reached an accuracy of 74.4%, which outperformed the previous state-of-the-art with 70% accuracy. The author reasoned that this increase of performance came from the maximum entropy principle as well as their consideration of the team’s last 6 game’s data which gave a more detailed depiction of team’s strength at the specific time before the play-off game. Among the 14 features that they considered, team depth was not included. We believe that the team depth is a great factor that impacts the result of the play-off games. And if our hypothesis is true, the team depth variable could be a valuable addition to Cheng et al.’s machine learning to improve their accuracy.\n\nAAAW_playoff_stats <- read_csv(\"data/AAAW_updatedplayoffStats.csv\")\n\nRows: 10648 Columns: 51\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): player, pos, team_id\ndbl (48): season, age, g, gs, mp_per_g, fg_per_g, fga_per_g, fg_pct, fg3_per...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(AAAW_playoff_stats)\n\nRows: 10,648\nColumns: 51\n$ season           <dbl> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,…\n$ player           <chr> \"Omer Yurtseven\", \"Kessler Edwards\", \"Draymond Green\"…\n$ pos              <chr> \"C\", \"SF\", \"PF\", \"SF\", \"PG\", \"PF\", \"C\", \"PF\", \"SG\", \"…\n$ age              <dbl> 23, 21, 31, 34, 26, 26, 29, 33, 28, 23, 24, 28, 27, 2…\n$ team_id          <chr> \"MIA\", \"BRK\", \"GSW\", \"PHI\", \"NOP\", \"DEN\", \"UTA\", \"ATL…\n$ g                <dbl> 9, 2, 22, 12, 6, 5, 6, 5, 5, 6, 9, 18, 10, 6, 13, 4, …\n$ gs               <dbl> 0, 0, 22, 12, 0, 5, 6, 3, 0, 0, 0, 18, 10, 6, 13, 4, …\n$ mp_per_g         <dbl> 4.2, 3.5, 32.0, 26.6, 10.0, 32.0, 32.8, 22.4, 15.2, 6…\n$ fg_per_g         <dbl> 1.3, 0.0, 3.1, 3.0, 1.0, 4.6, 3.5, 3.6, 1.2, 0.0, 0.3…\n$ fga_per_g        <dbl> 2.0, 0.0, 6.5, 7.4, 3.0, 10.8, 5.5, 9.0, 3.0, 1.2, 0.…\n$ fg_pct           <dbl> 0.667, NA, 0.479, 0.404, 0.333, 0.426, 0.636, 0.400, …\n$ fg3_per_g        <dbl> 0.0, 0.0, 0.4, 2.6, 0.8, 0.6, 0.0, 0.8, 0.8, 0.0, 0.2…\n$ fg3a_per_g       <dbl> 0.2, 0.0, 1.8, 6.3, 2.3, 3.0, 0.0, 3.0, 2.2, 0.5, 0.2…\n$ fg3_pct          <dbl> 0.000, NA, 0.205, 0.408, 0.357, 0.200, NA, 0.267, 0.3…\n$ fg2_per_g        <dbl> 1.3, 0.0, 2.8, 0.4, 0.2, 4.0, 3.5, 2.8, 0.4, 0.0, 0.1…\n$ fg2a_per_g       <dbl> 1.8, 0.0, 4.8, 1.1, 0.7, 7.8, 5.5, 6.0, 0.8, 0.7, 0.2…\n$ fg2_pct          <dbl> 0.750, NA, 0.581, 0.385, 0.250, 0.513, 0.636, 0.467, …\n$ efg_pct          <dbl> 0.667, NA, 0.507, 0.579, 0.472, 0.454, 0.636, 0.444, …\n$ ft_per_g         <dbl> 0.1, 0.0, 1.4, 0.0, 1.2, 4.0, 5.0, 2.2, 0.8, 0.0, 0.0…\n$ fta_per_g        <dbl> 0.3, 0.0, 2.1, 0.1, 1.3, 5.6, 7.3, 2.2, 1.0, 0.0, 0.0…\n$ ft_pct           <dbl> 0.333, NA, 0.638, 0.000, 0.875, 0.714, 0.682, 1.000, …\n$ orb_per_g        <dbl> 0.1, 0.0, 1.2, 0.8, 0.3, 3.6, 3.5, 0.4, 0.2, 0.3, 0.0…\n$ drb_per_g        <dbl> 0.7, 0.0, 6.0, 2.3, 1.2, 3.6, 9.7, 3.8, 0.4, 0.2, 0.2…\n$ trb_per_g        <dbl> 0.8, 0.0, 7.2, 3.1, 1.5, 7.2, 13.2, 4.2, 0.6, 0.5, 0.…\n$ ast_per_g        <dbl> 0.3, 0.5, 6.3, 0.8, 0.7, 2.6, 0.5, 0.8, 1.4, 0.5, 0.0…\n$ stl_per_g        <dbl> 0.0, 0.5, 1.1, 1.0, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.0…\n$ blk_per_g        <dbl> 0.1, 0.0, 1.0, 0.3, 0.2, 1.2, 1.0, 0.0, 0.0, 0.0, 0.0…\n$ tov_per_g        <dbl> 0.0, 0.5, 2.7, 1.1, 0.7, 1.6, 1.3, 1.0, 0.4, 0.2, 0.0…\n$ pf_per_g         <dbl> 0.2, 1.5, 4.0, 1.9, 0.5, 2.8, 3.2, 1.2, 1.4, 1.0, 0.0…\n$ pts_per_g        <dbl> 2.8, 0.0, 8.0, 8.6, 4.0, 13.8, 12.0, 10.2, 4.0, 0.0, …\n$ ast_pct          <dbl> 16.6, 17.5, 25.7, 4.9, 9.4, 12.0, 2.4, 6.4, 12.4, 10.…\n$ blk_pct          <dbl> 2.9, 0.0, 3.2, 1.2, 1.4, 3.9, 3.8, 0.0, 0.0, 0.0, 0.0…\n$ bpm              <dbl> 8.0, -4.4, 0.9, 1.3, -1.1, -1.3, 2.3, -1.8, -2.8, -14…\n$ dbpm             <dbl> 2.8, 6.4, 2.9, 0.9, -1.0, -2.2, 0.1, -1.3, -1.9, -2.9…\n$ drb_pct          <dbl> 19.3, 0.0, 20.6, 10.3, 14.7, 14.4, 34.1, 20.9, 3.4, 3…\n$ dws              <dbl> 0.0, 0.0, 1.0, 0.3, 0.0, 0.0, 0.2, 0.0, -0.1, 0.0, 0.…\n$ fg3a_per_fga_pct <dbl> 0.111, NA, 0.271, 0.854, 0.778, 0.278, 0.000, 0.333, …\n$ fta_per_fga_pct  <dbl> 0.167, NA, 0.326, 0.011, 0.444, 0.519, 1.333, 0.244, …\n$ mp               <dbl> 38, 7, 703, 319, 60, 160, 197, 112, 76, 36, 16, 688, …\n$ obpm             <dbl> 5.1, -10.8, -2.0, 0.4, -0.2, 0.9, 2.2, -0.6, -0.8, -1…\n$ orb_pct          <dbl> 3.0, 0.0, 4.3, 3.6, 3.7, 13.5, 12.5, 2.1, 1.6, 6.2, 0…\n$ ows              <dbl> 0.1, 0.0, 0.4, 0.0, 0.1, 0.3, 0.6, 0.0, 0.1, -0.1, 0.…\n$ per              <dbl> 25.8, -2.2, 12.3, 9.9, 11.5, 15.7, 19.4, 10.8, 7.8, -…\n$ stl_pct          <dbl> 0.0, 7.3, 1.8, 2.0, 0.9, 0.6, 0.3, 0.5, 0.7, 1.5, 0.0…\n$ tov_pct          <dbl> 0.0, 100.0, 26.4, 12.7, 15.7, 10.8, 13.3, 9.1, 10.4, …\n$ trb_pct          <dbl> 10.8, 0.0, 12.7, 7.1, 8.9, 13.9, 23.3, 11.3, 2.4, 5.1…\n$ ts_pct           <dbl> 0.647, NA, 0.534, 0.576, 0.558, 0.520, 0.688, 0.512, …\n$ usg_pct          <dbl> 22.6, 6.6, 14.0, 15.1, 18.3, 20.2, 14.3, 22.5, 11.0, …\n$ vorp             <dbl> 0.1, 0.0, 0.5, 0.3, 0.0, 0.0, 0.2, 0.0, 0.0, -0.1, 0.…\n$ ws               <dbl> 0.2, 0.0, 1.4, 0.3, 0.1, 0.2, 0.7, 0.0, 0.0, -0.2, 0.…\n$ ws_per_48        <dbl> 0.228, -0.104, 0.094, 0.049, 0.049, 0.063, 0.182, 0.0…\n\n\n\nNBA_df <- AAAW_playoff_stats |>\n  filter(season >= 1990)\n\n\nNBA_df <- NBA_df |>\n  mutate(team_id = paste(season, team_id, sep = \"\"))\n\nhead(NBA_df)\n\n# A tibble: 6 × 51\n  season player   pos     age team_id     g    gs mp_pe…¹ fg_pe…² fga_p…³ fg_pct\n   <dbl> <chr>    <chr> <dbl> <chr>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1   2022 Omer Yu… C        23 2022MIA     9     0     4.2     1.3     2    0.667\n2   2022 Kessler… SF       21 2022BRK     2     0     3.5     0       0   NA    \n3   2022 Draymon… PF       31 2022GSW    22    22    32       3.1     6.5  0.479\n4   2022 Danny G… SF       34 2022PHI    12    12    26.6     3       7.4  0.404\n5   2022 Devonte… PG       26 2022NOP     6     0    10       1       3    0.333\n6   2022 Aaron G… PF       26 2022DEN     5     5    32       4.6    10.8  0.426\n# … with 40 more variables: fg3_per_g <dbl>, fg3a_per_g <dbl>, fg3_pct <dbl>,\n#   fg2_per_g <dbl>, fg2a_per_g <dbl>, fg2_pct <dbl>, efg_pct <dbl>,\n#   ft_per_g <dbl>, fta_per_g <dbl>, ft_pct <dbl>, orb_per_g <dbl>,\n#   drb_per_g <dbl>, trb_per_g <dbl>, ast_per_g <dbl>, stl_per_g <dbl>,\n#   blk_per_g <dbl>, tov_per_g <dbl>, pf_per_g <dbl>, pts_per_g <dbl>,\n#   ast_pct <dbl>, blk_pct <dbl>, bpm <dbl>, dbpm <dbl>, drb_pct <dbl>,\n#   dws <dbl>, fg3a_per_fga_pct <dbl>, fta_per_fga_pct <dbl>, mp <dbl>, …\n\n\n\nNBA_df <- NBA_df |>\n  filter(g >= 4,\n         mp_per_g >= 10)\n\n\nMethodology\n\nData Cleaning (Done Above)\n\nReorder the dataset in such a way that it is done by team by year. Filter out all players who played less than 10 minutes per game and all years before 1990.\nAppend new row of champions by year\n\n\n\nQuantification of Team Depth using Basic Stats, Advanced Stats, and Combo Stats\nWe quantify team depth use this general equation: #Quality Player / #Rotation Player (players with more than 10 minutes per game on average). We propose 3 different ways to define quality player, thus creating 3 ways to quantify team depth\n\nBasic Stats: \n\nPoints Per 36 minutes: (points per game / minutes per game) *36 > 16 OR\nRebounds Per 36 minutes: (rebounds per game / minutes per game) *36 > 6.5 OR\nAssists Per 36 minutes: (assists per game / minutes per game) *36 > 3.5\n\nAdvanced Stats\n\nPlayer Efficiency Rating >=15 \n\nPlayer Efficiency Rating = (PTS + REB + AST + STL + BLK − Missed FG − Missed FT - TO) / GP.\nThis is already calculated in the dataset.\n\n\n\nOR\n\nWin Share per 48 min > 0.1\n\nBased on the statistical contribution of everyone on the team, the total number of wins on the team gets proportionally distributed to each player, and we calculate the win shares each player contributed per 48 minutes (1 game)\nThis is already calculated in the dataset\n\nCombo: players must meet both the requirement of basic stats and advanced stats to be considered as quality player\n\nWe will use these 3 methods to define quality players and subsequently team depth (#Quality Players / #Rotation Players). These 3 quantifications of team depth will each be tested to see if championship winning teams would have a significantly higher team depth.\n\n\n\nPart 1: Basic stats\n\nNBA_df_basic <- NBA_df |>\n  mutate(pp_36 = pts_per_g / mp_per_g * 36,\n         rp_36 = trb_per_g / mp_per_g * 36,\n         ap_36 = ast_per_g / mp_per_g * 36)\n\n\nNBA_df_basic |>\n  ggplot(aes(x = pp_36)) +\n  geom_histogram(binwidth = 1, fill = \"blue\") +\n  labs(\n    x = \"Points Per 36 Minutes\",\n    y = \"Number of Players\",\n    title = \"Distribution of Points Per 36 Minutes Across\n    NBA Playoff Players\"\n  )\n\n\n\nNBA_df_basic |>\n  ggplot(aes(x = rp_36)) +\n  geom_histogram(binwidth = 0.5, fill = \"orange\") +\n  labs(\n    x = \"Rebounds Per 36 Minutes\",\n    y = \"Number of Players\",\n    title = \"Distribution of Rebounds Per 36 Minutes Across\n    NBA Playoff Players\"\n  )\n\n\n\nNBA_df_basic |>\n  ggplot(aes(x = ap_36)) +\n  geom_histogram(binwidth = 0.3, fill = \"red\") +\n  labs(\n    x = \"Assists Per 36 Minutes\",\n    y = \"Number of Players\",\n    title = \"Distribution of Assists Per 36 Minutes Across\n    NBA Playoff Players\"\n  )\n\n\n\n\n\nQual_player_df_basic <- NBA_df_basic |>\n  filter(pp_36 > 16 | rp_36 > 6.5 | ap_36 > 3.5) |>\n  group_by(team_id) |>\n  summarise(count_qual = n())\n\n\nAll_rot_players_df <- NBA_df |>\n  group_by(team_id) |>\n  summarise(count_rot = n())\n\nBasic_df <- Qual_player_df_basic |>\n  left_join(All_rot_players_df, by = \"team_id\")\n\nBasic_df\n\n# A tibble: 496 × 3\n   team_id count_qual count_rot\n   <chr>        <int>     <int>\n 1 1990BOS          7         8\n 2 1990CHI          7         9\n 3 1990CLE          5         7\n 4 1990DET          8         8\n 5 1990HOU          5         7\n 6 1990LAL          6         8\n 7 1990MIL          6         7\n 8 1990NYK          6         8\n 9 1990PHI          5         7\n10 1990PHO          6         7\n# … with 486 more rows\n\n\n\nBasic_df <- Basic_df |>\n  mutate(Basic_depth = count_qual / count_rot,\n         Championship = if_else(team_id %in% c(\"1990DET\", \"1991CHI\", \"1992CHI\", \"1993CHI\", \"1994HOU\", \"1995HOU\", \"1996CHI\", \"1997CHI\", \"1998CHI\", \"1999SAS\", \"2000LAL\", \"2001LAL\", \"2002LAL\", \"2003SAS\", \"2004DET\", \"2005SAS\", \"2006MIA\", \"2007SAS\", \"2008BOS\", \"2009LAL\", \"2010LAL\", \"2011DAL\", \"2012MIA\", \"2013MIA\", \"2014SAS\", \"2015GSW\", \"2016CLE\", \"2017GSW\", \"2018GSW\", \"2019TOR\", \"2020LAL\", \"2021MIL\", \"2022GSW\"), \"Champ\", \"Not Champ\" ))\n\n\nResults Part 1\nIn this section, we evaluate the results of our basic model's calculation of team depth of championship winning teams and other teams. We expect that teams that win championships are likely better than teams that do not and should thus have a higher team depth. We want to determine whether there is an appreciable difference in squad depth for teams that win championships and teams that do not for our basic model. \n\nBasic_df |>\n  ggplot(\n    aes(x = Championship, y = Basic_depth,  fill = Championship)\n  ) +\n  geom_boxplot() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Basic Depth of Champions vs Non-Champions\",\n       x = \"Team\",\n       y = \"Team Depth (Defined by Basic Stats)\")\n\n\n\n\nThe box-plot above shows that there is a limited difference in team depth between champion and non champion teams. It appears that for champion teams, team depth has a tighter spread, a slightly higher median value than for non-champion teams, and quartiles are similarly clustered around the median for both categories.\n\nBasic_df |>\n  ggplot(\n    aes(x = Championship, y = Basic_depth,  fill = Championship)\n  ) +\n  geom_violin() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Basic Depth of Champions vs Non-Champions\",\n       x = \"Team\",\n       y = \"Team Depth (Defined by Basic Stats)\")\n\n\n\n\nAs shown in the violin plot, non-champ teams have a larger spread when it comes to team depth, but most of the data is distributed very similarly to champion teams. There does appear to be a slightly higher number of champion teams that have a squad depth over 0.8\nStatistical Test\n\nBasic_df |>\n  group_by(Championship) |>\n  summarize(mean(Basic_depth))\n\n# A tibble: 2 × 2\n  Championship `mean(Basic_depth)`\n  <chr>                      <dbl>\n1 Champ                      0.755\n2 Not Champ                  0.720\n\n\n\\(\\bar{x_c} - \\bar{x_n}\\) = 0.035\n\nset.seed(4723)\n\nnull_dist_basic <- Basic_df |>\n  specify(response = Basic_depth, explanatory = Championship) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\", order = c(\"Champ\", \"Not Champ\"))\n\n\nvisualize(null_dist_basic) +\n shade_p_value(obs_stat = 0.035, direction = \"greater\") +\n  labs(title = \"Null Distribution of (Champion Depth - Non-Champion Depth) \nusing Basic Statistics\",\n      x = \"Difference (Champion Depth - Non-Champion Depth)\",\n      y = \"Frequency\")\n\n\n\n\nAs shown above, there is a moderate likelihood that there is a mean difference greater than the observed mean difference in team depth when the null hypothesis is true. This is specifically shown in that when the true population mean is defined as 0, a medium portion of the distribution will have a mean difference that is greater than the observed mean difference for our sample. \n\nnull_dist_basic |>\n  get_p_value(obs_stat = 0.035, direction = \"right\")\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.078\n\n\nThe p value informs us of the probability of observing the results of a statistical test, given that the null hypothesis is true. The p value tells us that the probability of observing a squad depth difference greater than zero for champion and non-champion teams is 0.078, given that the null hypothesis is true and there is no difference between squad depth for these categories. Our determined p-value is above our value for alpha (0.05), allowing us to determine that there is not enough evidence to reject the null hypothesis and there is not a difference observed in team depth for champions and non-champions for the basic model. \nOverall Conclusion:\nThe box plot and violin plot show that both champion and non-champion teams have a similar distribution of team depth scores. Furthermore, our statistical testing led us to fail to reject the null hypothesis that there is no difference in the true mean squad depths. Thus, we can conclude that the basic model for predicting squad depth does not appear to align with the outcome of championships.\n\n\n\nPart 2: Advanced Stats\n\nQual_player_df_adv <- NBA_df |>\n  filter(per >= 15 | ws_per_48 >= 0.1) |>\n  group_by(team_id) |>\n  summarise(count_qual = n())\n\nAdv_df <- Qual_player_df_adv |>\n  left_join(All_rot_players_df, by = \"team_id\")\n\n\nAdv_df <- Adv_df |>\n  mutate(Adv_depth = count_qual / count_rot,\n         Championship = if_else(team_id %in% c(\"1990DET\", \"1991CHI\", \"1992CHI\", \"1993CHI\", \"1994HOU\", \"1995HOU\", \"1996CHI\", \"1997CHI\", \"1998CHI\", \"1999SAS\", \"2000LAL\", \"2001LAL\", \"2002LAL\", \"2003SAS\", \"2004DET\", \"2005SAS\", \"2006MIA\", \"2007SAS\", \"2008BOS\", \"2009LAL\", \"2010LAL\", \"2011DAL\", \"2012MIA\", \"2013MIA\", \"2014SAS\", \"2015GSW\", \"2016CLE\", \"2017GSW\", \"2018GSW\", \"2019TOR\", \"2020LAL\", \"2021MIL\", \"2022GSW\"), \"Champ\", \"Not Champ\" ))\n\n\nResults Part 2\nIn this section, we evaluate the results of our advanced model's calculation of team depth of championship winning teams and other teams. We expect that teams that win championships are likely better than teams that do not across their entire lineup and should thus have a higher team depth. We want to determine whether there is an appreciable difference in squad depth for teams that win championships and teams that do not for our basic model.\n\nAdv_df |>\n  ggplot(\n    aes(x = Championship, y = Adv_depth,  fill = Championship)\n  ) +\n  geom_boxplot() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Advanved Depth of Champions vs Non-Champions\",\n       x = \"Team\",\n       y = \"Team Depth (Defined by Adv Stats)\")\n\n\n\n\nAs shown in the box plot, there is a substantial difference in the team depth for champion and non-champion teams. The median squad depth of champion teams and non champion teams is approximately 0.75 and 0.5 respectively, and 1st and 3rd quartiles do not overlap between the two categories. The squad depth for champion teams has a much smaller spread relative to that of the non-champion teams.\n\nAdv_df |>\n  ggplot(\n    aes(x = Championship, y = Adv_depth,  fill = Championship)\n  ) +\n  geom_violin() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Advanced Depth of Champions vs Non-Champions\",\n       x = \"Team\",\n       y = \"Team Depth (Defined by Adv Stats)\")\n\n\n\n\nThe violin plot showcases that there is limited overlap in the distributions of team depth for champion and non-champion teams. Furthermore, a substantial portion of the non-champion teams have a squad depth that is lower than the minimum value of squad depth for champion teams\n\nAdv_df |>\n  group_by(Championship) |>\n  summarize(mean(Adv_depth))\n\n# A tibble: 2 × 2\n  Championship `mean(Adv_depth)`\n  <chr>                    <dbl>\n1 Champ                    0.751\n2 Not Champ                0.506\n\n\n\\(\\bar{x_c} - \\bar{x_n}\\) = 0.245\n\nset.seed(4723)\n\nnull_dist_adv <- Adv_df |>\n  specify(response = Adv_depth, explanatory = Championship) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\", order = c(\"Champ\", \"Not Champ\"))\n\n\nvisualize(null_dist_adv) +\n shade_p_value(obs_stat = 0.245, direction = \"greater\") +\n  labs(title = \"Advanced Distribution of (Champion Depth - Non-Champion Depth) \nusing Basic Statistics\",\n      x = \"Difference (Champion Depth - Non-Champion Depth)\",\n      y = \"Frequency\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\n\nIn the null distribution above, we see that there is functionally 0 probability that when the null hypothesis is true that our true mean difference is greater than what we observed in our sample, which is consistent with our p < 0.001 calculation from earlier.\n\nnull_dist_adv |>\n  get_p_value(obs_stat = 0.245, direction = \"right\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nThe p value informs us of the probability of observing the results of a statistical test, given that the null hypothesis is true. The p value tells us that the probability of observing a squad depth difference greater than zero for champion and non-champion teams is < 0.001, given that the null hypothesis is true and there is no difference between squad depth for these categories. Our determined p-value is below our value for alpha (0.05), allowing us to reject the null hypothesis and conclude our alternate hypothesis that there is a significant difference in team depth for champions and non-champions for the basic model. Specifically, champion team depth is significantly higher than non-champion team depth.\n\nOverall Conclusions:\nOur box plot and violin plot provide evidence that there is a substantial difference in the distribution of team depth values for champions and non-champions and that champions generally had a higher team depth value as determined by our advance model. Furthermore, our hypothesis testing allowed us to conclude that there is enough evidence to reject the null hypothesis that there is no difference in true mean team depths between the categories. Thus, we can conclude the alternate hypothesis that there is a significant difference in team depth for champion and non-champion teams.\nPart 3: Combo\n\nNBA_df_combo <- NBA_df |>\n  mutate(pp_36 = pts_per_g / mp_per_g * 36,\n         rp_36 = trb_per_g / mp_per_g * 36,\n         ap_36 = ast_per_g / mp_per_g * 36)\n\nQual_player_df_combo <- NBA_df_combo |>\n  filter(pp_36 > 16 | rp_36 > 6.5 | ap_36 > 3.5, \n         per >= 15 | ws_per_48 >= 0.1) |>\n  group_by(team_id) |>\n  summarise(count_qual = n())\n\nCombo_df <- Qual_player_df_combo |>\n  left_join(All_rot_players_df, by = \"team_id\")\n\n\nCombo_df <- Combo_df |>\n  mutate(Combo_depth = count_qual / count_rot,\n         Championship = if_else(team_id %in% c(\"1990DET\", \"1991CHI\", \"1992CHI\", \"1993CHI\", \"1994HOU\", \"1995HOU\", \"1996CHI\", \"1997CHI\", \"1998CHI\", \"1999SAS\", \"2000LAL\", \"2001LAL\", \"2002LAL\", \"2003SAS\", \"2004DET\", \"2005SAS\", \"2006MIA\", \"2007SAS\", \"2008BOS\", \"2009LAL\", \"2010LAL\", \"2011DAL\", \"2012MIA\", \"2013MIA\", \"2014SAS\", \"2015GSW\", \"2016CLE\", \"2017GSW\", \"2018GSW\", \"2019TOR\", \"2020LAL\", \"2021MIL\", \"2022GSW\"), \"Champ\", \"Not Champ\" ))\n\n\n\nResults Part 3\n\nCombo_df |>\n  ggplot(\n    aes(x = Championship, y = Combo_depth,  fill = Championship)\n  ) +\n  geom_boxplot() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Combo Depth of Champions vs Non-Champions\",\n       x = \"Team\",\n       y = \"Team Depth (Defined by Combo Stats)\")\n\n\n\n\n\nCombo_df |>\n  ggplot(\n    aes(x = Championship, y = Combo_depth,  fill = Championship)\n  ) +\n  geom_violin() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Combo Depth of Champions vs Non-Champions\",\n       x = \"Team\",\n       y = \"Team Depth (Defined by Combo Stats)\")\n\n\n\n\n\nCombo_df |>\n  group_by(Championship) |>\n  summarize(mean(Combo_depth))\n\n# A tibble: 2 × 2\n  Championship `mean(Combo_depth)`\n  <chr>                      <dbl>\n1 Champ                      0.627\n2 Not Champ                  0.439\n\n\n\\(\\bar{x_c} - \\bar{x_n}\\) = 0.188\n\nset.seed(4723)\n\nnull_dist_combo <- Combo_df |>\n  specify(response = Combo_depth, explanatory = Championship) |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\", order = c(\"Champ\", \"Not Champ\"))\n\n\nvisualize(null_dist_combo) +\n shade_p_value(obs_stat = 0.188, direction = \"greater\") +\n  labs(title = \"Combo Distribution of (Champion Depth - Non-Champion Depth) \nusing Basic Statistics\",\n      x = \"Difference (Champion Depth - Non-Champion Depth)\",\n      y = \"Frequency\")\n\nWarning in min(diff(unique_loc)): no non-missing arguments to min; returning Inf\n\n\n\n\n\n\nnull_dist_combo |>\n  get_p_value(obs_stat = 0.188, direction = \"right\")\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n\n\nModel Fitting\n\nAdv_df <- Adv_df |>\n  mutate (Championship = as.factor(Championship))\n\nChamp_model <- logistic_reg() |>\n  set_engine('glm') |>\n  fit(Championship ~ Adv_depth, data = Adv_df, family = 'binomial') \n\n\nChamp_model |>\n  tidy()\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     8.69      1.06      8.21 2.25e-16\n2 Adv_depth      -9.55      1.45     -6.58 4.77e-11\n\n\n\nAdv_df <- Adv_df |>\n  mutate(pred_prob = predict(Champ_model$fit, type = \"response\"))\n\nggplot(data = Adv_df) + \n  geom_point(aes(x = Adv_depth, y = as.numeric(Championship) -1, \n                        color = Championship)) + \n  geom_line(aes(x = Adv_depth, y = pred_prob)) + \n  labs(title = \"Logistic Model of Adv_depth on Championship\",\n       x = \"Team Depth from Advanced Statistics\", \n       y = \"Probability of Team Not Winning Championship\", \n       color = \"Champion or Not\"\n       )"
  }
]